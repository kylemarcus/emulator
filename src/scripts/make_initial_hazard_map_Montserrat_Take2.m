function make_initial_hazard_map_Montserrat_Take2(outputDir)
    %this file intializes an (east,north) map of probability that a
    %critical flow depth will be exceeded, to zero probability everywhere.
    %The map will then be repetitively updated by resampling a stochastic 
    %emulator built from a ___relatively___ small number of simulations, 
    %we use the emulator as a fast surrogate for the computatutionally 
    %expensive simulator since Monte Carlo's standard error decays as 
    %sqrt(variance/# of samples) which means that 1 million samples (or 
    %resamples) are generally needed for 3 significant figures of accuracy.
    %1 million 20 minute simulations running non-stop 64 in parallel at a
    %time would take 217 days and 20 minutes.  That's too long to wait, so
    %we use the fast emulator instead.

    crith=0.2; %[m]: a pyroclastic flow that is 20 [cm] deep is deadly, so 
    %we chose it as the critical flow depth
    
    Ndiminmacro=4; %there are 4 uncertain input dimensions for this .phm
    %they are (log10(volume [m^3]),Estart [UTME],Nstart [UTMN],BedFrictAng [deg])


    %I grabbed these from the SAMSI montserrat pileheightrecord.000194 file
    %In general they do not have to be on a grid; I just used a regular 
    %grid to make it easier to develope/debug/evaluate-quality-of the 
    %probability of hazard map.
    %Neast =512/2; eastminmax =[ 374301  383949];
    %Nnorth=768/2; northminmax=[1844224 1858696];        
    Neast =320/2; eastminmax =[581552.36  590653.64];
    Nnorth=288/2; northminmax=[1844486.64 1853073.36];        
    east =repmat( ((2*(0:(Neast -1))+0.5)/(2*Neast )*(eastminmax( 2)-eastminmax(1 ))+eastminmax( 1))',1    ,Nnorth);
    north=repmat(  (2*(0:(Nnorth-1))+0.5)/(2*Nnorth)*(northminmax(2)-northminmax(1))+northminmax(1)  ,Neast,1     );
        
    Nxmap=numel(east); %total number of (east,north) points on hazard map, 
    %this is NOT the number of points in the east direction.  points on the
    %hazard map do not need to be evenly spaced, the file format uses an 
    %"unstructured grid"
        
    Ndiminspatial=2;
    %this line does not change
    xWIWI2=[sortrows([east(:) north(:)],Ndiminspatial:-1:1) zeros(Nxmap,2)];
    
    Nresamp=0; %number of resample macro-inputs included in the probability
    %of hazard map (.phm) file so far.  Since we just created/initialized 
    %the .phm file, no resamples have yet been added. This also means
    %that...

    W=0; %total weight of resamples so far. The probability of hazard at a
    %point is calculated as P(h(east,north)>crith)=WI(east,north)/W
            
    fid=fopen(strcat(outputDir,'/montserrat_take2_vol_dir_bed_int.phm'),'w');
    Nskip=8;
    %fprintf(fid,'additional file format lines=%g\n',Nskip);        
    
    %fprintf(fid,'%%This file contains data for the Montserrat Take2 probability of hazard map generated by resampling a piecewise linear ensemble emulator constructed from titan simulations\n');
    %fprintf(fid,'%%crith [m]: the critical flow depth in meters, a .phm file contains the data needed to plot a map of P(h(east,north)>crith): [1] double\n');
    %fprintf(fid,'%%Ndiminmacro=4: number of uncertain dimensions (see what they are below) for each resample input: [1] integer\n');
    %fprintf(fid,'%%W: total so far weight of all resamples (macro emulator inputs) used to make this file:  [1] double\n');
    %fprintf(fid,'%%Nxmap: the number of (east,north) points on the map directly represented by this file: [1] integer\n');
    %fprintf(fid,'%%[Nxmap] lines containing {{x=(east,north):[2] doubles},{{WI WI^2}: these are the sum of all w*indicator_function and (w*indicator_function)^2, you compute the probability of exceeding the critical height as P(h(east,north)>crith)=WI/W: [2] doubles}}\n');
    %fprintf(fid,'%%Nresamp: number of resample inputs used so far to produce this .phm file: [1] integer\n');
    %fprintf(fid,'%%[Nresamp] lines containing the {{resample macro-inputs: (log10(volume [m^3]),Direction [deg CC from east],BedFrictAng [deg],IntFrictAng [deg]): [Ndiminmacro] doubles},{w: weight of this resample macro-input: [1] double}}\n');
     
    %fprintf(fid,'%g\n',crith,Ndiminmacro,W,Nxmap);
    %fprintf(fid,'%.2f %.2f %.14g %.14g\n',xWIWI2');
    index=[1:length(xWIWI2)]';
    fprintf(fid,'%d %.2f %.2f\n',[index xWIWI2(:,1:2)]');
    %fprintf(fid,'%g\n',Nresamp);
    %fprintf(fid,'%.10g %.10g %.10g %.10g %.10g\n',[log10vol(:) Estart(:) Nstart(:) BedFrictAng(:) w(:)]'); % I did
    %not need to evaluate this line since Nresamp=0, basiaclly I wrote 0 
    %lines of this data.
    fclose(fid);
return
