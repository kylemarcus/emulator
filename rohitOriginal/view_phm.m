%function Preturn  = view_phm(hazmapfilename)
    iftoc=0;
    if(iftoc)
        tic;
    end
%hazmapfilename = 'montserrat_take2_vol_dir_bed_int_Netezza.phm';
%hazmapfilename = 'view_100_nov8.txt';
%hazmapfilename = 'mmmoth_cluster_100_apr_4_2013.txt';
hazmapfilename = 'hazard_map';
    fid=fopen(hazmapfilename,'r');
    
    Nskip=sscanf(fgets(fid),'additional file format lines=%g',1);
    
    for i=1:Nskip
        fgets(fid);
    end
%     fprintf(fid,'%%This file contains data for a Colima probability of hazard map generated by resampling a piecewise linear ensemble emulator constructed from titan simulations\n');
%     fprintf(fid,'%%crith [m]: the critical flow depth in meters, a .phm file contains the data needed to plot a map of P(h(east,north)>crith): [1] double\n');
%     fprintf(fid,'%%Ndiminmacro=4: number of uncertain dimensions (see what they are below) for each resample input: [1] integer\n');
%     fprintf(fid,'%%W: total so far weight of all resamples (macro emulator inputs) used to make this file:  [1] double\n');
%     fprintf(fid,'%%Nxmap: the number of (east,north) points on the map directly represented by this file: [1] integer\n');
%     fprintf(fid,'%%[Nxmap] lines containing {{x=(east,north):[2] doubles},{{WI WI^2}: these are the sum of all w*indicator_function and w*indicator_function^2, you compute the probability of exceeding the critical height as P(h(east,north)>crith)=WI/W: [2] doubles}}\n');
%     fprintf(fid,'%%Nresamp: number of resample inputs used so far to produce this .phm file: [1] integer\n');
%     fprintf(fid,'%%[Nresamp] lines containing the {{resample macro-inputs: (log10(volume [m^3]),Direction [deg CC from east],BedFrictAng [deg],IntFrictAng [deg]): [Ndiminmacro] doubles},{w: weight of this resample macro-input: [1] double}}\n');
         
    crith=sscanf(fgets(fid),'%g',1); 
    Ndiminmacro=sscanf(fgets(fid),'%g',1);
    W=sscanf(fgets(fid),'%g',1); 
    Nxmap=sscanf(fgets(fid),'%g',1);

    XMAPWIWI2=fscanf(fid,'%g %g %g\n',[4 Nxmap])';
        
    Nresamp=sscanf(fgets(fid),'%g',1);
    
    XMACROw=fscanf(fid,sprintf('%%g%s\n',repmat(' %g',1,Ndiminmacro)),[Ndiminmacro+1 Nresamp])';
    fclose(fid);  

    EAST=XMAPWIWI2(:,1);
    NORTH=XMAPWIWI2(:,2);
    P=XMAPWIWI2(:,3)/W;
    Preturn = P;
    SDP=sqrt((XMAPWIWI2(:,4)/Nresamp-XMAPWIWI2(:,3).^2/Nresamp^2)*(Nresamp^3/((Nresamp-1)*W^2))/Nresamp);
    %i=find(~SDP&~P);
    %P(i)=nan; SDP(i)=nan;
    
    
    NEAST=find(diff(NORTH),1);
    if(mod(Nxmap,NEAST))
        bob;
    end
    NEAST = 256;
    NNORTH=Nxmap/NEAST;
    EAST=reshape(EAST,NEAST,NNORTH);
    NORTH=reshape(NORTH,NEAST,NNORTH);
    %EAST = EAST(14:256,:);
    %NORTH = NORTH(14:256,:);
    %NEAST = 243;
    %set up to do my own manual coloring with patch
    ix=shiftdim([1:NEAST-1]'*ones(1,NNORTH-1),-1);
    iy=shiftdim(ones(NEAST-1,1)*[1:NNORTH-1],-1);
    iquads=zeros(4,NEAST-1,NNORTH-1);
    iquads(1,:,:)=(iy-1)*(NEAST)+ix;
    iquads(2,:,:)=(iy-1)*(NEAST)+ix+1;
    iquads(3,:,:)=(iy-0)*(NEAST)+ix+1;
    iquads(4,:,:)=(iy-0)*(NEAST)+ix;
    iquads=reshape(iquads,[4 (NEAST-1)*(NNORTH-1)]);
    
    NEAST = 256;
    P=reshape(P,NEAST,NNORTH);
    for i=26:40
        P(:,i ) = P(:,25) +   (i-25)*(P(:,41) - P(:,25))/(41-25);
    end
    for i = 2:255
                  
      P(i,:) = ( P(i-1,:) + P(i+1,:) )/2;
    end
    
%     for i=1:256
%         for j=2:384
%             if isnan(P(i,j))
%                 P(i,j) = P(i-1,j);
%             end
%         end
%     end
                
    
    
    %P = P(14:256,:);
    SDP=reshape(SDP,NEAST,NNORTH); 
    cmap=colormap;
    cmaplength=size(cmap,1);
    iPzero=find(~(P>0));
 
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%       
%     [errorcode,filenamespresent]=system('dir');
%     if(isempty(findstr('QUICKSTART.mat',filenamespresent)));
%         %only need to do this once to generate a .mat file then save some 
%         %time by loading the .mat file
%         fid=fopen('mosaic.asc','r');
% 
%         NX=fscanf(fid,'ncols %g',1);
%         NY=fscanf(fid,'\nnrows %g',1);
%         xllc=fscanf(fid,'\nxllcorner %g',1);
%         yllc=fscanf(fid,'\nyllcorner %g',1);
%         DX=fscanf(fid,'\ncellsize %g',1); DY=DX;
%         ndv=fscanf(fid,'\nNODATA_value %g',1);
%         z=fscanf(fid,'%g',[NX NY]);
%         fclose(fid);
% 
%         xminmax=xllc+[0 DX*(NX-1)];
%         yminmax=yllc+[0 DY*(NY-1)];
%         
%         x=(xminmax(1):DX:xminmax(2))'*ones(1,NY);
%         y=ones(NX,1)*(yminmax(2):-DY:yminmax(1));
% 
%         i=find(z==ndv);
%         ii=find(z~=ndv);
%         minz=min(z(ii));
%         z(i)=minz;
%         z(find(isnan(z)))=minz;
% 
%         z=fixslope(x,y,z,60,10000);
% 
%         save QUICKSTART x y z NX NY DX DY xminmax yminmax;
%     else
%         load QUICKSTART;
%     end
% 
%     mmz=minmax(z(:)');
%     %scale=10^(floor(log10(diff(mmz)))-1)
%     %Nc=20;
%     dz=100; %round(diff(mmz)/Nc/scale)*scale
%     cz=mmz(1):dz:mmz(2);        
%     x=x(:,1)'; y=y(1,:)'; z=z';
%     C=contourc(x,y,z,cz);
%     lenC=size(C,2);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    minmaxP=[min(P(:)) max(P(:))]; %[.2560 1]; 

    %icolor=min(max(real(round((log10(P)-log10(minmaxP(1)))/diff(log10(minmaxP))*cmaplength)),1),cmaplength);
    %Rohit-> I have commented the above line and added the below line
    %which is same as abve but without the log
    %Pp = P';
%     Pp(1:4992) = NaN;
%     P = Pp;
%Pp = P';
%Pp(1:20000) = NaN;
%P = Pp';
    %P(find(P<0.1)) = NaN;
    
    
    icolor=min(max(real(round(((P)-(minmaxP(1)))/diff((minmaxP))*cmaplength)),1),cmaplength);
   
    %icolor=min(max(real(round((log10(P)-log10(minmaxP(1)))/diff((log10(minmaxP)))*cmaplength)),1),cmaplength);
    
    cvert=cmap(icolor,:);
    cvert(iPzero,:)=1;
    patch(EAST(iquads),NORTH(iquads),P(iquads),reshape(cvert(iquads,:),[size(iquads) 3]));
    shading flat;
    axis image;
    %axis off;
    %hcl=camlight;
    caxis(minmaxP);
    colorbar();
    %colorbar('vert','yscale','log');
    %title(sprintf('P(h>%g [m])',crith),'fontsize',14);
    %xlabel('East','fontsize',14);
    %ylabel('North','fontsize',14);
    
%     hold on; 
%     istart=1;
%     while(istart<lenC)
%         i=istart+(1:C(2,istart));
%         c=C(1:2,i);
%         istart=istart+C(2,istart)+1;
%         plot(c(1,:),c(2,:),'-k')
%     end
        
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%     figure;
%     rat=SDP./P;
%     rat(iPzero)=nan;
%     minmaxrat=[min(rat(:)) max(rat(:))];
% 
%     icolor=min(max(real(round((log10(rat)-log10(minmaxrat(1)))/diff(log10(minmaxrat))*cmaplength)),1),cmaplength);
%     cvert=cmap(icolor,:);
%     cvert(iPzero,:)=1;
%     patch(EAST(iquads),NORTH(iquads),rat(iquads),reshape(cvert(iquads,:),[size(iquads) 3]));
%     shading flat;
%     axis image;    
%     hcl=camlight;
%     caxis(minmaxrat);
%     colorbar('vert','yscale','log');
%     title('\sigma_P/P','fontsize',14);
%     xlabel('East','fontsize',14);
%     ylabel('North','fontsize',14);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    

%     hold on; 
%     istart=1;
%     while(istart<lenC)
%         i=istart+(1:C(2,istart));
%         c=C(1:2,i);
%         istart=istart+C(2,istart)+1;
%         plot(c(1,:),c(2,:),'-k')
%     end
%         
%     save DEVELOPME_VIEW_PHM;
%         
%     if(0)
% 
%     Iy0=1:Ny0;
%     X=ysy(Iy0,1); Y=ysy(Iy0,2); H=ysy(Iy0,5);
%     minmaxh=[((10^ysy(1,3))^(1/3))/10000 max(H)];
%     cmap=colormap;
%     cmaplength=size(cmap,1);
%     
%     iHzero=find(H<=minmaxh(1));
%     icolor=min(max(real(round((log10(H)-log10(minmaxh(1)))/diff(log10(minmaxh))*cmaplength)),1),cmaplength);
%     cvert=cmap(icolor,:);
%     cvert(iHzero,:)=1;
%     trit=tess0';
%     patch(X(trit),Y(trit),H(trit),reshape(cvert(trit,:),[size(trit) 3]));
%     shading interp;
%     axis image;
%     hcl=camlight;
%     caxis(minmaxh);
%     colorbar('vert','yscale','log');
%     
%     save DEBUGWTF2;
%     end
% %return